class Ball {
     field int m_y, m_x, dx, dy, m_length, mult;
     field Bricks m_bricks;

     constructor Ball new(Bricks bricks, int length, int m) {
          let m_y = 256;
          let m_x = 215;
          let dy = 1;
          let dx = -1;
          let mult = m;
          let m_length = length;
          let m_bricks = bricks;
          do Screen.drawCircle(m_y, m_x, 4);
          return this;
     }

     method void breakBricks() {
          /** Breaks the bricks in the ball's way */
          var int c, r;
          var Brick b;
          let c = 0;
          while(c<5) {
               let r = 0;
               while( r<11) {
                    let b = m_bricks.get(c, r);
                    if((m_y > (b.getx()-5))&(m_y < (b.getx()+35))&(m_x >( b.gety()-5))&(m_x < (b.gety()+20))) {
                         let dx = -dx;
                         do m_bricks.break(c, r);
                         do b.setx(-50);
                         do b.sety(-50);
                    }
                    let r = r+1;
               }
               let c = c+1;
          }
          return;
     }

     method boolean move (int p) {
          /** Moves one step. Returns false if the ball fell, else true */
          var int q, w;
          var boolean ret;
          let ret = true;
          do breakBricks();
          if((m_x +(mult*dx)) > 215) {
               if ((m_y < (p-m_length-8))|(m_y > (p+m_length+8))) {
                    let ret = false;
               }
               let q = p/2-((p+1)/2);
               if (q=0) {
                    let dx = -dx;
               }
               if (q=-1) {
                    if (dx = 1) {
                         let dx = -2;
                    }
                    else {
                         if (dx = -1) {
                              let dx = 2;
                         }
                         else {
                              if (dx = -2) {
                                   let dx  = 1;
                              }
                              else {
                                   if (dx = 2) {
                                        let dx  = -1;
                                   }
                              }
                         }
                    }
               }
          }
          else {
               if((m_x + (mult*dx)) < 5) {
                    let dx = -dx;
               }
          }
          if(((m_y + (mult*dy)) > 500)|((m_y + (mult*dy)) < 5)) {
               let dy = -dy;
          }
          do Screen.setColor(false);
          do Screen.drawCircle(m_y, m_x, 4);
          do Screen.setColor(true);
          let m_y = m_y+(mult*dy);
          let m_x = m_x+(mult*dx);
          do Screen.drawCircle(m_y, m_x, 4);
          return ret;
     }

     method void dispose() {
          do Screen.setColor(false);
          do Screen.drawCircle(m_y, m_x, 4);
          do Screen.setColor(true);
          do Memory.deAlloc(this);
          return;
     }
}